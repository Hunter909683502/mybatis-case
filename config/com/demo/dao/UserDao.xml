<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demo.dao.UserDao">
	<!-- 
		注意区分外连接和内连接的区别
			想这里左外连接是以user表为参考表连接orders表，
			在order表中没有user对应的数据的话，要是会显示user的信息，
			但是相关的orders信息就以null来表示
			
			如果是内连接的话，会直接丢掉在orders表中没有数据的用户记录。
	-->
	<select id="getAllUserAboutOrders" resultMap="UserAndOrders">
		select 
			u.user_id,
			u.username,
			u.age,
			u.password,
			o.orders_id,
			o.count,
			o.status
		from
			user u
		left JOIN orders o
		on
			u.user_id = o.user_id;
	</select>
	
	
	<resultMap type="com.demo.model.User" id="UserAndOrders">
		<id column="user_id" property="userId"/>
		<result column="password" property="password"/>
		<result column="age" property="age"/>
		<result column="username" property="username"/>
		
		<!-- 一对多： 对User来说跟订单的关系就是一对多的关系，要在user这边来维护关系的话，要增加一个集合属性来维护
			collection 来配置集合属性
				property：属性名
				ofType：属性的类型，注意association是用javaType表示
		 -->
		<collection property="orders" ofType="com.demo.model.Orders">
			<id column="orders_id" property="orderId"/>
			<result column="count" property="count"/>
			<result column="status" property="status"/>
			<!-- <association property="user" javaType="com.demo.model.User">
				<id column="user_id" property="userId"/>
				<result column="password" property="password"/>
				<result column="age" property="age"/>
				<result column="username" property="username"/>
			</association> -->
		</collection>
	</resultMap>
	
</mapper>
